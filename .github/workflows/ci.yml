name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install .NET SDK
        run: |
          eng/install-dotnet.sh
          echo "DOTNET_ROOT=$PWD/.dotnet" >> "$GITHUB_ENV"
          echo "$PWD/.dotnet" >> "$GITHUB_PATH"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Restore npm dependencies
        working-directory: src/Presentation/gestor-inventario-web
        run: npm install
      - name: Restore dotnet dependencies
        run: dotnet restore
      - name: Build dotnet solution
        run: dotnet build --configuration Release --no-restore
      - name: Build web client
        working-directory: src/Presentation/gestor-inventario-web
        run: npm run build

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install .NET SDK
        run: |
          eng/install-dotnet.sh
          echo "DOTNET_ROOT=$PWD/.dotnet" >> "$GITHUB_ENV"
          echo "$PWD/.dotnet" >> "$GITHUB_PATH"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Restore npm dependencies
        working-directory: src/Presentation/gestor-inventario-web
        run: npm install
      - name: Install Playwright browsers
        working-directory: src/Presentation/gestor-inventario-web
        run: npx playwright install --with-deps
      - name: Restore dotnet dependencies
        run: dotnet restore
      - name: Run dotnet tests
        run: dotnet test --configuration Release --no-restore
      - name: Run Playwright tests
        working-directory: src/Presentation/gestor-inventario-web
        run: npm run test:e2e

  static-analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install .NET SDK
        run: |
          eng/install-dotnet.sh
          echo "DOTNET_ROOT=$PWD/.dotnet" >> "$GITHUB_ENV"
          echo "$PWD/.dotnet" >> "$GITHUB_PATH"
      - name: Install dotnet-format
        run: dotnet tool install --global dotnet-format --version 5.1.250801
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Restore npm dependencies
        working-directory: src/Presentation/gestor-inventario-web
        run: npm install
      - name: dotnet format
        run: dotnet format --verify-no-changes
      - name: Lint web client
        working-directory: src/Presentation/gestor-inventario-web
        run: npm run lint
      - name: Type check web client
        working-directory: src/Presentation/gestor-inventario-web
        run: npm run typecheck

  compliance:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Secret scanning (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Infrastructure policy scan (Checkov)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
